name: Release on Tag Push

on:
  push:
    tags:
      - "v*.*.*"  # Only run on semver tags like v1.2.3

permissions:
  contents: write  # Needed for committing and creating releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to access all tags and commits

      - name: Extract Tag Name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Get Previous Tag
        run: |
          git fetch --tags
          PREV_TAG=$(git tag --sort=-creatordate | grep '^v' | sed -n '2p')
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

      - name: Detect Default Branch and Check It Out
        run: |
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d ':' -f2 | tr -d ' ')
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV
          git fetch origin $DEFAULT_BRANCH
          git checkout $DEFAULT_BRANCH
          git reset --hard $GITHUB_SHA

      - name: Generate and Prepend Changelog
        run: |
          DATE=$(date +'%Y-%m-%d')
          REPO=${{ github.repository }}

          echo "## What's new in $TAG_NAME - $DATE" > new_changes.txt
          echo "" >> new_changes.txt
          git log $PREV_TAG..HEAD --pretty=format:"- %s [%h](https://github.com/$REPO/commit/%h)" >> new_changes.txt
          echo "" >> new_changes.txt

          touch CHANGELOG.md
          cat new_changes.txt CHANGELOG.md > combined.txt && mv combined.txt CHANGELOG.md

      - name: Commit and Push Updated Changelog
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "docs: update changelog for $TAG_NAME"
          git push origin main

      - name: Create GitHub Release with Auto-Generated Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create $TAG_NAME \
            --generate-notes \
            --title "Release $TAG_NAME" \
            --repo ${{ github.repository }}
